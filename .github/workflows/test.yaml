name: test
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  go_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - go-fasthttp-dual-stack
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
      - run: go build
      - uses: golangci/golangci-lint-action@v8
        with:
          working-directory: ${{ matrix.directory }}
  ninja_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - c-stack-operation-elimination
          - ninja-phony
          - ninja-parallel
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: homebrew/actions/setup-homebrew@master
      - run: brew install llvm ninja
      - run: ninja
  npm_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm
      - run: pnpm i --frozen-lockfile
      - run: pnpm -r build
      - run: node --run lint
      - run: pnpm -r test
  ruby_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - cucumber-example-escape
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
      - run: bundler
      - run: bundler exec cucumber --publish-quiet
  rust_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - .
          - rust-dyn-future
          - rust-generator
          - rust-hello-world
          - rust-libc
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: homebrew/actions/setup-homebrew@master
      - run: cargo build
      - run: cargo clippy
      - run: cargo fmt --check
      - run: cargo test
  scheme_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - scheme-callcc
          - scheme-eval
          - scheme-macro
          - scheme-shift-reset
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: homebrew/actions/setup-homebrew@master
      - run: brew install minimal-racket
      - run: racket --script main.scm
  shell_test:
    strategy:
      fail-fast: false
      matrix:
        directory:
          - c-hello-world
          - llvm-c-calling-convention
          - llvm-pointer-tag
          - llvm-unnamed-addr
          - mlir-c-wrapper
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@v5
      - uses: homebrew/actions/setup-homebrew@master
      - run: sudo apt update --fix-missing
      - run: sudo apt install gcc-multilib
      - run: ./main.sh
  spell_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: streetsidesoftware/cspell-action@v7
  test:
    runs-on: ubuntu-latest
    needs:
      - go_test
      - ninja_test
      - npm_test
      - ruby_test
      - rust_test
      - scheme_test
      - shell_test
      - spell_check
    if: ${{ always() }}
    steps:
      - run: |
          for result in ${{ join(needs.*.result, ' ') }}; do
            [ $result = success ]
          done
